apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: brokers.eventing.knative.dev
spec:
  group: eventing.knative.dev
  names:
    kind: Broker
    listKind: BrokerList
    plural: brokers
    singular: broker
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: Broker collects a pool of events that are consumable using Triggers.
        Brokers provide a well-known endpoint for event delivery that senders can
        use with minimal knowledge of the event routing strategy. Receivers use Triggers
        to request delivery of events from a Broker's pool to a specific URL or Addressable
        endpoint.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: Spec defines the desired state of the Broker.
          properties:
            config:
              description: Config is a KReference to the configuration that specifies
                configuration options for this Broker. For example, this could be
                a pointer to a ConfigMap.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    This is optional field, it gets defaulted to the object holding
                    it if left out.'
                  type: string
              required:
              - apiVersion
              - kind
              - name
              type: object
            delivery:
              description: Delivery is the delivery specification for Events within
                the Broker mesh. This includes things like retries, DLQ, etc.
              properties:
                backoffDelay:
                  description: "BackoffDelay is the delay before retrying. More information
                    on Duration format: https://www.ietf.org/rfc/rfc3339.txt \n For
                    linear policy, backoff delay is the time interval between retries.
                    For exponential policy , backoff delay is backoffDelay*2^<numberOfRetries>."
                  type: string
                backoffPolicy:
                  description: BackoffPolicy is the retry backoff policy (linear,
                    exponential).
                  type: string
                deadLetterSink:
                  description: DeadLetterSink is the sink receiving event that could
                    not be sent to a destination.
                  properties:
                    ref:
                      description: Ref points to an Addressable.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                            This is optional field, it gets defaulted to the object
                            holding it if left out.'
                          type: string
                      required:
                      - apiVersion
                      - kind
                      - name
                      type: object
                    uri:
                      description: URI can be an absolute URL(non-empty scheme and
                        non-empty host) pointing to the target or a relative URI.
                        Relative URIs will be resolved using the base URI retrieved
                        from Ref.
                      type: string
                  type: object
                retry:
                  description: Retry is the minimum number of retries the sender should
                    attempt when sending an event before moving it to the dead letter
                    sink.
                  format: int32
                  type: integer
              type: object
          type: object
        status:
          description: Status represents the current state of the Broker. This data
            may be out of date.
          properties:
            address:
              description: Broker is Addressable. It exposes the endpoint as an URI
                to get events delivered into the Broker mesh.
              properties:
                url:
                  type: string
              type: object
            annotations:
              additionalProperties:
                type: string
              description: Annotations is additional Status fields for the Resource
                to save some additional State as well as convey more information to
                the user. This is roughly akin to Annotations on any k8s resource,
                just the reconciler conveying richer information outwards.
              type: object
            conditions:
              $ref: '#/definitions/knative.dev~1pkg~1apis~0Conditions'
              description: Conditions the latest available observations of a resource's
                current state.
            observedGeneration:
              description: ObservedGeneration is the 'Generation' of the Service that
                was last processed by the controller.
              format: int64
              type: integer
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: false
    subresources:
      status: {}
  - name: v1beta1
    served: true
    storage: true
